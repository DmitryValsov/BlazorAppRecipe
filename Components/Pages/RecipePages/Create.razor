@page "/recipes/create"
@using Microsoft.EntityFrameworkCore
@using BlazorWebAppRecipe.Models
@inject IDbContextFactory<BlazorAppRecipe.Data.BlazorAppRecipeContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Recipe</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Recipe" OnValidSubmit="AddRecipe" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputText id="title" @bind-Value="Recipe.Title" class="form-control" /> 
                <ValidationMessage For="() => Recipe.Title" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="releasedate" class="form-label">ReleaseDate:</label> 
                <InputDate id="releasedate" @bind-Value="Recipe.ReleaseDate" class="form-control" /> 
                <ValidationMessage For="() => Recipe.ReleaseDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="ingredients" class="form-label">Ingredients:</label> 
                <InputText id="ingredients" @bind-Value="Recipe.Ingredients" class="form-control" /> 
                <ValidationMessage For="() => Recipe.Ingredients" class="text-danger" /> 
            </div>
            Ингредиенты:<br />
            @foreach (var course in courses)
            {
                <option value="@course">@course</option>
            }
            <div class="mb-3">
                <label for="price" class="form-label">Price:</label> 
                <InputNumber id="price" @bind-Value="Recipe.Price" class="form-control" /> 
                <ValidationMessage For="() => Recipe.Price" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/recipes">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Recipe Recipe { get; set; } = new();


    List<string> courses = ["Капуста", "Свекла", "Соль", "Сахар"];

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddRecipe()
    {
        using var context = DbFactory.CreateDbContext();
        context.Recipe.Add(Recipe);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/recipes");
    }



}
